swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /account/{accountId}/lastTransactions:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Current Month Transactions
      description: Get the current month Transactions linked to the specified Account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: string
          required: true
          description: ID of the target account
      produces:
        - application/json
      responses:
        "200":
          description: Account's last transactions retrieved successully
          schema:
            $ref: "#/definitions/TransactionsApiResponse"
        "400":
          description: Invalid Account ID
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Retrieve a target Transaction
      description: Find a transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          type: number
          minimum: 1
          required: true
          description: ID of the target transaction
      produces:
        - application/json
      responses:
        "200":
          description: Target transaction retrieved successully
          schema:
            $ref: "#/definitions/TransactionApiResponse"
        "400":
          description: Invalid Transaction ID
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete a target Transaction
      description: Delete a Transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          type: number
          minimum: 1
          required: true
          description: ID of the target transaction
      produces:
        - application/json
      responses:
        "204":
          description: Target transaction delete successully
        "400":
          description: Invalid Transaction ID
        "404":
          description: Transaction not found
  /transaction:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update a target Transaction
      description: The ID of the transaction needs to be part of the body datas
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Transaction Datas
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/TransactionApiResponse"
        "400":
          description: Invalid ID Format
        "404":
          description: Transaction not found
        "405":
          description: Validation Exception
        "500":
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Post a new Transaction
      description: Used create a new Transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Transaction Datas
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction created successully
          schema:
            $ref: "#/definitions/TransactionApiResponse"
        "405":
          description: Invalid Input / Transaction Datas
        "500":
          description: Internal Server Error
  /transaction/categories:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Retrieve all the Transactions Categories
      description: Get those Categories as an Array
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction categories retrieved successully
          schema:
            $ref: "#/definitions/CategoriesApiResponse"
        "500":
          description: Internal Server Error
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Category:
    type: object
    x-nullable: true
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Food
  TransactionType:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Electronic
  Transaction:
    type: object
    required:
      - date
      - description
      - amount
      - balance
      - transactionType
      - category
    properties:
      "id":
        type: integer
        format: int64
        minimum: 1
      "date":
        type: string
        format: date
      "description":
        type: string
        example: Golden Sun Bakery
      "amount":
        type: number
        format: float
      "balance":
        type: number
        format: float
      "transactionType":
        $ref: "#/definitions/TransactionType"
      "category":
        $ref: "#/definitions/Category"
      "notes":
        type: string
        x-nullable: true
  TransactionsApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: "#/definitions/Transaction"
  TransactionApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: "#/definitions/Transaction"
  CategoriesApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: "#/definitions/Category"
